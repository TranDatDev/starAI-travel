
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  phoneNumber: 'phoneNumber',
  avatar: 'avatar',
  language: 'language',
  theme: 'theme',
  isBanned: 'isBanned',
  isDeleted: 'isDeleted',
  isVerified: 'isVerified',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  bio: 'bio',
  birthday: 'birthday',
  gender: 'gender',
  location: 'location'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  content: 'content',
  imageUrl: 'imageUrl',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDisabled: 'isDisabled',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PartnerInfoScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  organization: 'organization',
  licenseNumber: 'licenseNumber',
  status: 'status',
  verifiedById: 'verifiedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StaffScalarFieldEnum = {
  id: 'id',
  partnerId: 'partnerId',
  name: 'name',
  position: 'position',
  email: 'email',
  phoneNumber: 'phoneNumber'
};

exports.Prisma.ReviewServiceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  serviceId: 'serviceId',
  service: 'service',
  reviewStars: 'reviewStars',
  comment: 'comment',
  reviewedAt: 'reviewedAt',
  metadata: 'metadata'
};

exports.Prisma.UserHistoryScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  serviceId: 'serviceId',
  service: 'service',
  viewedAt: 'viewedAt',
  metadata: 'metadata'
};

exports.Prisma.ManagerHistoryScalarFieldEnum = {
  id: 'id',
  managerId: 'managerId',
  action: 'action',
  actionScope: 'actionScope',
  targetId: 'targetId',
  targetType: 'targetType',
  description: 'description',
  httpMethod: 'httpMethod',
  httpUrl: 'httpUrl',
  httpQuery: 'httpQuery',
  httpParams: 'httpParams',
  httpBody: 'httpBody',
  httpHeaders: 'httpHeaders',
  actedAt: 'actedAt'
};

exports.Prisma.AdminHistoryScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  action: 'action',
  targetId: 'targetId',
  targetType: 'targetType',
  description: 'description',
  httpMethod: 'httpMethod',
  httpUrl: 'httpUrl',
  httpQuery: 'httpQuery',
  httpParams: 'httpParams',
  httpBody: 'httpBody',
  httpHeaders: 'httpHeaders',
  actedAt: 'actedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  phoneNumber: 'phoneNumber',
  avatar: 'avatar',
  language: 'language',
  theme: 'theme'
};

exports.Prisma.ProfileOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  bio: 'bio',
  gender: 'gender',
  location: 'location'
};

exports.Prisma.PostOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  content: 'content',
  imageUrl: 'imageUrl'
};

exports.Prisma.PartnerInfoOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  organization: 'organization',
  licenseNumber: 'licenseNumber',
  verifiedById: 'verifiedById'
};

exports.Prisma.StaffOrderByRelevanceFieldEnum = {
  id: 'id',
  partnerId: 'partnerId',
  name: 'name',
  position: 'position',
  email: 'email',
  phoneNumber: 'phoneNumber'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.ReviewServiceOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  serviceId: 'serviceId',
  comment: 'comment'
};

exports.Prisma.UserHistoryOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  serviceId: 'serviceId'
};

exports.Prisma.ManagerHistoryOrderByRelevanceFieldEnum = {
  id: 'id',
  managerId: 'managerId',
  targetId: 'targetId',
  description: 'description',
  httpUrl: 'httpUrl'
};

exports.Prisma.AdminHistoryOrderByRelevanceFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  targetId: 'targetId',
  description: 'description',
  httpUrl: 'httpUrl'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  PARTNER: 'PARTNER',
  MANAGER: 'MANAGER',
  ADMIN: 'ADMIN'
};

exports.PartnerStatus = exports.$Enums.PartnerStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.ServiceType = exports.$Enums.ServiceType = {
  ACCOMMODATION: 'ACCOMMODATION',
  RESTAURANT: 'RESTAURANT',
  ATTRACTION: 'ATTRACTION'
};

exports.ManagerAction = exports.$Enums.ManagerAction = {
  MANAGE_USER: 'MANAGE_USER',
  MANAGE_PARTNER: 'MANAGE_PARTNER'
};

exports.TargetType = exports.$Enums.TargetType = {
  USER: 'USER',
  PARTNER: 'PARTNER',
  POST: 'POST',
  TOURISM_INFO: 'TOURISM_INFO',
  AI_MODEL: 'AI_MODEL'
};

exports.HttpMethod = exports.$Enums.HttpMethod = {
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
  DELETE: 'DELETE',
  PATCH: 'PATCH',
  OPTIONS: 'OPTIONS',
  HEAD: 'HEAD'
};

exports.AdminAction = exports.$Enums.AdminAction = {
  MANAGE_MANAGER: 'MANAGE_MANAGER',
  RESTORE_USER: 'RESTORE_USER',
  ANALYZE_DATA: 'ANALYZE_DATA',
  MANAGE_AI: 'MANAGE_AI'
};

exports.Prisma.ModelName = {
  User: 'User',
  Profile: 'Profile',
  Post: 'Post',
  PartnerInfo: 'PartnerInfo',
  Staff: 'Staff',
  ReviewService: 'ReviewService',
  UserHistory: 'UserHistory',
  ManagerHistory: 'ManagerHistory',
  AdminHistory: 'AdminHistory'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
